var searchIndex = JSON.parse('{\
"bevy_rust_gpu":{"doc":"bevy-rust-gpu","t":[3,8,6,6,16,8,18,18,3,3,8,3,3,3,16,12,12,0,0,12,12,12,12,12,12,10,0,0,0,12,12,4,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,3,8,6,6,16,18,18,3,3,8,3,3,3,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5],"n":["ChangedShaders","EntryPoint","EntryPointName","EntryPointParameters","Fragment","LoadRustGpuShader","NAME","PARAMETERS","RustGpu","RustGpuKey","RustGpuMaterial","RustGpuMaterialPlugin","RustGpuPlugin","RustGpuSettings","Vertex","base","base","bevy_pbr_rust","entry_point_export","fallback_base_fragment","fallback_base_vertex","fragment_shader","fragment_shader","iteration","iteration","load_rust_gpu_shader","prelude","shader_meta","systems","vertex_shader","vertex_shader","MeshFragment","MeshVertex","PbrFragment","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","downcast","downcast","downcast","from","from","from","from_sample_","from_sample_","from_sample_","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","permutation","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","EntryPointExportPlugin","Export","ExportHandle","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","default","downcast","downcast","fmt","from","from","from_sample_","from_sample_","from_world","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","permutation","shader","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","ChangedShaders","EntryPoint","EntryPointName","EntryPointParameters","Fragment","NAME","PARAMETERS","RustGpu","RustGpuKey","RustGpuMaterial","RustGpuMaterialPlugin","RustGpuPlugin","RustGpuSettings","Vertex","alpha_mode","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","base","base","bind_group_layout","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","default","default","default","default","depth_bias","deref","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_hash","eq","eq","equivalent","equivalent","export_to","fallback_base_fragment","fallback_base_vertex","fmt","fmt","fmt","fragment_shader","fragment_shader","fragment_shader","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","get_hash","hash","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","iteration","iteration","map_settings","partial_cmp","permutation","permutation","permutation","specialize","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_uuid","upcast","upcast","upcast","upcast","upcast","upcast","vertex_shader","vertex_shader","vertex_shader","wgpu_settings","ModuleMeta","ShaderMetaMap","ShaderMetaPlugin","add","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","default","deserialize","downcast","downcast","downcast","entry_points","erased_serialize","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","meta","meta_to_shader","module","module_meta_events","remove_by_meta","remove_by_shader","serialize","shader","shader_to_meta","to_owned","to_owned","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_uuid","upcast","upcast","upcast","module_meta_events","reload_materials","shader_events"],"q":["bevy_rust_gpu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy_rust_gpu::bevy_pbr_rust","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy_rust_gpu::entry_point_export","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy_rust_gpu::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy_rust_gpu::shader_meta","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy_rust_gpu::systems","",""],"d":["A resource to track <code>rust-gpu</code> shaders that have been …","A <code>rust-gpu</code> entry point for use with <code>RustGpuMaterial</code>.","An entry point name for use with the <code>EntryPoint</code> trait.","A set of entry compile parameters for use with the …","","Loads a <code>Shader</code> asset, and optionally its metadata if the …","The entry point’s base function name, including module …","Mapping from bevy shader defs to <code>permutate-macro</code> …","Extends a <code>Material</code> with <code>rust-gpu</code> shader support.","<code>RustGpu</code> pipeline key.","A <code>Material</code> type with statically-known <code>rust-gpu</code> vertex and …","Configures backend support for <code>RustGpu&lt;M&gt;</code>.","Enforces WGPU limitations required by <code>rust-gpu</code>, and runs …","Type-level RustGpu material settings","","","Base material.","<code>bevy-pbr-rust</code>-backed <code>RustGpuMaterial</code> implementation for …","Adds support for exporting the active entry point set to a …","If true, use M::fragment as a fallback instead of …","If true, use M::vertex as a fallback instead of …","","If <code>Some</code>, overrides <code>Material::fragment_shader</code> during …","","Current reload iteration, used to drive hot-reloading.","","","Adds support for loading <code>.spv.json</code> metadata.","Plugin systems.","","If <code>Some</code>, overrides <code>Material::vertex_shader</code> during …","<code>bevy_rust_gpu::mesh::entry_points::fragment</code>","<code>bevy_rust_gpu::mesh::entry_points::vertex</code>","<code>bevy_rust_gpu::pbr::entry_points::fragment</code>","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Handles exporting known <code>RustGpuMaterial</code> permutations to a …","MPSC message describing an entry point.","Handle to an entry point file export","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","A resource to track <code>rust-gpu</code> shaders that have been …","A <code>rust-gpu</code> entry point for use with <code>RustGpuMaterial</code>.","An entry point name for use with the <code>EntryPoint</code> trait.","A set of entry compile parameters for use with the …","","The entry point’s base function name, including module …","Mapping from bevy shader defs to <code>permutate-macro</code> …","Extends a <code>Material</code> with <code>rust-gpu</code> shader support.","<code>RustGpu</code> pipeline key.","A <code>Material</code> type with statically-known <code>rust-gpu</code> vertex and …","Configures backend support for <code>RustGpu&lt;M&gt;</code>.","Enforces WGPU limitations required by <code>rust-gpu</code>, and runs …","Type-level RustGpu material settings","","","","","","","","","","","","","","","","","","","","","","","","","","Base material.","","","","","","","","","","","","","","Build an entry point name from the provided shader defs","Build an entry point name from the provided shader defs","Build an entry point name from the provided shader defs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If true, use M::fragment as a fallback instead of …","If true, use M::vertex as a fallback instead of …","","","","","","If <code>Some</code>, overrides <code>Material::fragment_shader</code> during …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Current reload iteration, used to drive hot-reloading.","","","Constructs a permutation set from the provided shader defs","Constructs a permutation set from the provided shader defs","Constructs a permutation set from the provided shader defs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","","","If <code>Some</code>, overrides <code>Material::vertex_shader</code> during …","","JSON asset corresponding to a <code>.json.spv</code> file.","Mapping between <code>Handle&lt;Shader&gt;</code> and <code>Handle&lt;ModuleMeta&gt;</code>","Handles the loading of <code>.spv.json</code> shader metadata, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of entry points compiled into the corresponding <code>.spv</code> …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Path to corresponding <code>.spv</code> file.","Listens for asset events, updates backend data, and …","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","","","","Listens for [<code>ModuleMeta</code>] asset events, updates backend …","Consumes aggregated shader change events and …","Listens for <code>Shader</code> asset events, clears metadata if the …"],"i":[0,0,0,0,65,0,66,66,0,0,0,0,0,0,65,31,21,0,0,33,33,31,21,31,21,67,0,0,0,31,21,0,0,0,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,0,0,0,14,16,14,16,14,16,14,16,14,16,14,16,16,16,16,14,16,16,14,16,14,16,16,14,16,14,16,14,16,14,16,16,16,16,14,16,14,16,14,16,14,16,14,16,0,0,0,0,65,66,66,0,0,0,0,0,0,65,21,29,30,31,31,32,33,21,21,29,30,31,32,33,21,21,29,30,31,32,33,21,31,31,21,21,29,30,31,32,33,21,29,30,31,32,33,21,66,66,66,29,30,31,32,33,21,31,32,33,21,31,32,33,21,21,30,32,33,21,21,32,32,29,30,31,32,33,21,31,21,31,31,21,31,21,21,33,33,32,33,21,21,31,21,29,30,31,32,33,21,29,30,31,32,33,21,30,32,33,21,31,31,29,30,31,32,33,21,29,30,31,32,33,21,29,30,31,32,33,21,29,30,31,32,33,21,31,21,21,21,66,66,66,21,31,32,33,21,29,30,31,32,33,21,29,30,31,32,33,21,29,30,31,32,33,21,29,30,31,32,33,21,21,21,29,30,31,32,33,21,21,31,21,29,0,0,0,52,56,52,55,56,52,55,56,52,55,56,52,55,56,52,55,56,52,55,52,55,52,55,56,52,55,55,56,52,55,55,55,52,55,56,52,55,56,52,55,56,52,55,56,52,55,56,52,55,56,52,55,56,52,55,52,52,55,0,52,52,55,52,52,52,55,56,52,55,56,52,55,56,52,55,56,52,55,55,55,56,52,55,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[4],[4],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5]]],[[6,[3,5]]]],[[[6,[5]]],[[6,[3,5]]]],[[[6,[5]]],[[6,[3,5]]]],[7,[[7,[3]]]],[7,[[7,[3]]]],[7,[[7,[3]]]],[8,[[8,[3]]]],[8,[[8,[3]]]],[8,[[8,[3]]]],[9,[[9,[10]]]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],0,0,0,[[],3],[[],3],[[],3],[[],3],[4],[4],[[]],[[]],[[]],[[]],[[14,15]],[16,16],[[]],[[],[[6,[17,5]]]],[[],16],[[]],[[]],[[16,18],19],[[]],[[]],[[]],[[]],[20],[[]],[[]],[[[6,[5]]],[[6,[3,5]]]],[[[6,[5]]],[[6,[3,5]]]],[7,[[7,[3]]]],[7,[[7,[3]]]],[8,[[8,[3]]]],[8,[[8,[3]]]],0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[21,22],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[21,23,24,4,25],[[11,[26,27]]]],[4],[4],[4],[4],[4],[4],[[],28],0,0,[24,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,10],[9,10],[9,10],[[29,15]],[[30,15]],[31,31],[32,32],[33,33],[[[21,[34]]],[[21,[34]]]],[[]],[[]],[[]],[[]],[[],[[6,[17,5]]]],[[],[[6,[17,5]]]],[[],[[6,[17,5]]]],[[],[[6,[17,5]]]],[[21,21],35],[[],30],[[],32],[[],33],[[],[[21,[36]]]],[21,37],[32],[32],[[]],[[]],[[]],[[]],[[]],[[]],[28,38],[28,38],[39],[[31,31],38],[[21,21],38],[[],38],[[],38],[[[2,[1]]]],0,0,[[32,18],19],[[33,18],19],[[[21,[40]],18],19],[[],41],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20],[20],[20],[20],[[],42],[31],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5]]],[[6,[3,5]]]],[[[6,[5]]],[[6,[3,5]]]],[[[6,[5]]],[[6,[3,5]]]],[[[6,[5]]],[[6,[3,5]]]],[[[6,[5]]],[[6,[3,5]]]],[[[6,[5]]],[[6,[3,5]]]],[7,[[7,[3]]]],[7,[[7,[3]]]],[7,[[7,[3]]]],[7,[[7,[3]]]],[7,[[7,[3]]]],[7,[[7,[3]]]],[8,[[8,[3]]]],[8,[[8,[3]]]],[8,[[8,[3]]]],[8,[[8,[3]]]],[8,[[8,[3]]]],[8,[[8,[3]]]],0,0,[43],[[21,21],[[13,[35]]]],[9,[[9,[10]]]],[9,[[9,[10]]]],[9,[[9,[10]]]],[[44,45,46,[47,[21]]],[[11,[48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],49],[[],50],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],41],0,0,[[],51],0,0,0,[[52,[54,[53]],[54,[55]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[4],[4],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[56,15]],[52,52],[55,55],[[]],[[]],[[],[[6,[17,5]]]],[[],[[6,[17,5]]]],[[],56],[[],52],[[],55],[[],[[11,[55]]]],[[]],[[]],[[]],0,[57,[[11,[58,59]]]],[[52,18],19],[[55,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[20],[20],[20],[[]],[[]],[[]],[[[6,[5]]],[[6,[3,5]]]],[[[6,[5]]],[[6,[3,5]]]],[[[6,[5]]],[[6,[3,5]]]],[7,[[7,[3]]]],[7,[[7,[3]]]],[7,[[7,[3]]]],[8,[[8,[3]]]],[8,[[8,[3]]]],[8,[[8,[3]]]],[[52,54],[[13,[54]]]],0,0,[[[61,[[60,[55]]]],[63,[[62,[55]]]],[64,[32]]]],[[52,[54,[55]]]],[[52,[54,[53]]]],[55,11],[[52,54],[[13,[54]]]],0,[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],49],[[],50],[[],13],[[],13],[[],13],[[[61,[[60,[55]]]],[63,[[62,[55]]]],[64,[32]]]],[[[64,[32]],[64,[[62,[21]]]]]],[[[61,[[60,[53]]]],[64,[32]]]]],"p":[[3,"PathBuf"],[8,"Into"],[8,"Any"],[3,"RenderAssets"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Vec"],[3,"String"],[4,"Result"],[3,"TypeId"],[4,"Option"],[3,"EntryPointExportPlugin"],[3,"App"],[3,"Export"],[8,"TypeData"],[3,"Formatter"],[6,"Result"],[3,"World"],[3,"RustGpu"],[4,"AlphaMode"],[3,"BindGroupLayout"],[3,"RenderDevice"],[3,"FallbackImage"],[3,"PreparedBindGroup"],[4,"AsBindGroupError"],[8,"DynEq"],[3,"RustGpuPlugin"],[3,"RustGpuMaterialPlugin"],[3,"RustGpuKey"],[3,"ChangedShaders"],[3,"RustGpuSettings"],[8,"Clone"],[4,"Ordering"],[8,"Default"],[15,"f32"],[15,"bool"],[8,"Hasher"],[8,"Debug"],[4,"ShaderRef"],[15,"u64"],[8,"FnOnce"],[3,"MaterialPipeline"],[3,"RenderPipelineDescriptor"],[6,"MeshVertexBufferLayout"],[3,"MaterialPipelineKey"],[4,"SpecializedMeshPipelineError"],[15,"str"],[3,"Uuid"],[3,"WgpuSettings"],[3,"ShaderMetaMap"],[3,"Shader"],[3,"Handle"],[3,"ModuleMeta"],[3,"ShaderMetaPlugin"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[4,"AssetEvent"],[3,"EventReader"],[3,"Assets"],[3,"Res"],[3,"ResMut"],[8,"RustGpuMaterial"],[8,"EntryPoint"],[8,"LoadRustGpuShader"],[4,"MeshVertex"],[4,"MeshFragment"],[4,"PbrFragment"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
