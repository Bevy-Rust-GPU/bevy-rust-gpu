var searchIndex = JSON.parse('{\
"bevy_rust_gpu":{"doc":"bevy-rust-gpu","t":[8,6,6,16,8,18,18,3,3,8,3,3,3,16,12,12,0,0,12,12,12,12,12,12,12,12,10,0,0,0,12,12,4,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,8,6,6,16,18,18,3,3,8,3,3,3,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5],"n":["EntryPoint","EntryPointName","EntryPointParameters","Fragment","LoadRustGpuShader","NAME","PARAMETERS","RustGpu","RustGpuKey","RustGpuMaterial","RustGpuMaterialPlugin","RustGpuPlugin","RustGpuSettings","Vertex","base","base","bevy_pbr_rust","entry_point_export","export_handle","export_handle","fallback_base_fragment","fallback_base_vertex","fragment_shader","fragment_shader","iteration","iteration","load_rust_gpu_shader","prelude","shader_meta","systems","vertex_shader","vertex_shader","MeshFragment","MeshVertex","PbrFragment","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","downcast","downcast","downcast","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","EntryPointExport","EntryPointExportPlugin","Export","ExportHandle","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","default","default","downcast","downcast","downcast","export","export_entry_points_system","fmt","fmt","from","from","from","from_world","from_world","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","permutation","receive_entry_points_system","shader","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","EntryPoint","EntryPointName","EntryPointParameters","Fragment","NAME","PARAMETERS","RustGpu","RustGpuKey","RustGpuMaterial","RustGpuMaterialPlugin","RustGpuPlugin","RustGpuSettings","Vertex","alpha_mode","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","base","base","bind_group_layout","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","cmp","default","default","default","depth_bias","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_hash","eq","eq","equivalent","equivalent","export_handle","export_handle","fallback_base_fragment","fallback_base_vertex","fmt","fmt","fragment_shader","fragment_shader","fragment_shader","from","from","from","from","from","from_world","from_world","from_world","get_hash","hash","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","iteration","iteration","map_settings","partial_cmp","permutation","permutation","permutation","specialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_uuid","upcast","upcast","upcast","upcast","upcast","vertex_shader","vertex_shader","vertex_shader","ChangedShaders","ModuleMeta","ShaderMetaMap","ShaderMetaPlugin","add","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","deref","deref_mut","deserialize","downcast","downcast","downcast","downcast","entry_points","erased_serialize","fmt","fmt","fmt","from","from","from","from","from_world","from_world","from_world","from_world","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","meta","meta_to_shader","module","module_meta_events","remove_by_meta","remove_by_shader","serialize","shader","shader_to_meta","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","type_uuid","upcast","upcast","upcast","upcast","module_meta_events","reload_materials","shader_events"],"q":["bevy_rust_gpu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy_rust_gpu::bevy_pbr_rust","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy_rust_gpu::entry_point_export","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy_rust_gpu::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy_rust_gpu::shader_meta","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy_rust_gpu::systems","",""],"d":["A <code>rust-gpu</code> entry point for use with <code>RustGpuMaterial</code>.","An entry point name for use with the <code>EntryPoint</code> trait.","A set of entry compile parameters for use with the …","","Loads a <code>Shader</code> asset, and optionally its metadata if the …","The entry point’s base function name, including module …","Mapping from bevy shader defs to <code>permutate-macro</code> …","Extends a <code>Material</code> with <code>rust-gpu</code> shader support.","<code>RustGpu</code> pipeline key.","A <code>Material</code> type with statically-known <code>rust-gpu</code> vertex and …","Configures backend support for <code>RustGpu&lt;M&gt;</code>.","Enforces WGPU limitations required by <code>rust-gpu</code>, and runs …","Type-level RustGpu material settings","","","Base material.","<code>bevy-pbr-rust</code>-backed <code>RustGpuMaterial</code> implementation for …","Adds support for exporting the active entry point set to a …","","If <code>Some</code>, active entry points will be reported to this …","If true, use M::fragment as a fallback instead of …","If true, use M::vertex as a fallback instead of …","","If <code>Some</code>, overrides <code>Material::fragment_shader</code> during …","","Current reload iteration, used to drive hot-reloading.","","","Adds support for loading <code>.spv.json</code> metadata.","Plugin systems.","","If <code>Some</code>, overrides <code>Material::vertex_shader</code> during …","<code>bevy_rust_gpu::mesh::entry_points::fragment</code>","<code>bevy_rust_gpu::mesh::entry_points::vertex</code>","<code>bevy_rust_gpu::pbr::entry_points::fragment</code>","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Non-send resource used to register export files and …","Handles exporting known <code>RustGpuMaterial</code> permutations to a …","MPSC message describing an entry point.","Handle to an entry point file export","","","","","","","","","","","","","","","","","","","","","","","","","Registers a path to which entrypoints will be exported, …","System used to write active entry point sets to their …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","System used to receive and store entry points sent from …","","","","","","","","","","","","","","","A <code>rust-gpu</code> entry point for use with <code>RustGpuMaterial</code>.","An entry point name for use with the <code>EntryPoint</code> trait.","A set of entry compile parameters for use with the …","","The entry point’s base function name, including module …","Mapping from bevy shader defs to <code>permutate-macro</code> …","Extends a <code>Material</code> with <code>rust-gpu</code> shader support.","<code>RustGpu</code> pipeline key.","A <code>Material</code> type with statically-known <code>rust-gpu</code> vertex and …","Configures backend support for <code>RustGpu&lt;M&gt;</code>.","Enforces WGPU limitations required by <code>rust-gpu</code>, and runs …","Type-level RustGpu material settings","","","","","","","","","","","","","","","","","","","","","","","Base material.","","","","","","","","","","","","Build an entry point name from the provided shader defs","Build an entry point name from the provided shader defs","Build an entry point name from the provided shader defs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>Some</code>, active entry points will be reported to this …","If true, use M::fragment as a fallback instead of …","If true, use M::vertex as a fallback instead of …","","","","","If <code>Some</code>, overrides <code>Material::fragment_shader</code> during …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Current reload iteration, used to drive hot-reloading.","","","Constructs a permutation set from the provided shader defs","Constructs a permutation set from the provided shader defs","Constructs a permutation set from the provided shader defs","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","","If <code>Some</code>, overrides <code>Material::vertex_shader</code> during …","A resource to track <code>rust-gpu</code> shaders that have been …","JSON asset corresponding to a <code>.json.spv</code> file.","Mapping between <code>Handle&lt;Shader&gt;</code> and <code>Handle&lt;ModuleMeta&gt;</code>","Handles the loading of <code>.spv.json</code> shader metadata, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of entry points compiled into the corresponding <code>.spv</code> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Path to corresponding <code>.spv</code> file.","Listens for asset events, updates backend data, and …","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","","","","","Listens for <code>ModuleMeta</code> asset events, updates backend data, …","Consumes aggregated shader change events and …","Listens for <code>Shader</code> asset events, clears metadata if the …"],"i":[0,0,0,67,0,68,68,0,0,0,0,0,0,67,36,24,0,0,36,24,37,37,36,24,36,24,69,0,0,0,36,24,0,0,0,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,0,0,0,0,14,16,18,14,16,18,14,16,18,14,16,18,14,16,18,14,16,16,16,16,18,14,16,18,18,18,16,18,14,16,18,16,18,14,16,18,14,16,18,14,16,14,16,18,16,18,16,16,14,16,18,14,16,18,14,16,18,14,16,18,0,0,0,67,68,68,0,0,0,0,0,0,67,24,34,35,36,36,37,24,24,34,35,36,37,24,24,34,35,36,37,24,36,36,24,24,34,35,36,37,24,34,35,36,37,24,68,68,68,34,35,36,37,24,36,37,24,36,37,24,24,35,37,24,24,34,35,36,37,24,36,24,36,36,24,36,24,36,24,37,37,37,24,24,36,24,34,35,36,37,24,35,37,24,36,36,34,35,36,37,24,34,35,36,37,24,34,35,36,37,24,34,35,36,37,24,36,24,24,24,68,68,68,24,36,37,24,34,35,36,37,24,34,35,36,37,24,34,35,36,37,24,24,24,34,35,36,37,24,24,36,24,0,0,0,0,55,57,55,56,58,57,55,56,58,57,55,56,58,57,55,56,58,57,55,56,58,57,55,56,58,55,56,58,55,56,58,57,55,56,58,58,58,56,57,55,56,58,56,56,55,56,58,57,55,56,58,57,55,56,58,57,55,56,58,57,55,56,58,57,55,56,58,57,55,56,58,55,55,56,0,55,55,56,55,55,55,56,58,57,55,56,58,57,55,56,58,57,55,56,58,56,56,57,55,56,58,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],[[4,[3]]]],0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[6],[6],[6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[9,[[9,[5]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[6],[6],[6],[[]],[[]],[[]],[[]],[[]],[[]],[[14,15]],[16,16],[[]],[[],[[8,[17,7]]]],[[],16],[[],18],[[]],[[]],[[]],[[18,[2,[1]]],19],[[[20,[18]]]],[[16,21],22],[[18,21],22],[[]],[[]],[[]],[23],[23],[[]],[[]],[[]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],0,[[[20,[18]]]],0,[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,[24,25],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[24,26,27,6,28],[[11,[[29,[24]],30]]]],[6],[6],[6],[6],[6],[[],31],0,0,[27,26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,33],[32,33],[32,33],[[34,15]],[[35,15]],[36,36],[37,37],[[[24,[38]]],[[24,[38]]]],[[]],[[]],[[]],[[],[[8,[17,7]]]],[[],[[8,[17,7]]]],[[],[[8,[17,7]]]],[[24,24],39],[[],35],[[],37],[[],[[24,[40]]]],[24,41],[[]],[[]],[[]],[[]],[[]],[31,42],[31,42],[43],[[36,36],42],[[24,24],42],[[],42],[[],42],0,0,0,0,[[37,21],22],[[[24,[44]],21],22],[[],45],0,0,[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[[],46],[36],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[9,[[9,[5]]]],[9,[[9,[5]]]],[9,[[9,[5]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],0,0,[47],[[24,24],[[13,[39]]]],[32,[[32,[33]]]],[32,[[32,[33]]]],[32,[[32,[33]]]],[[48,49,50,[51,[24]]],[[11,[52]]]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],53],[[],54],[[],13],[[],13],[[],13],[[],13],[[],13],[[],45],0,0,0,0,0,0,[[55,[4,[3]],[4,[56]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[57,15]],[55,55],[56,56],[58,58],[[]],[[]],[[]],[[],[[8,[17,7]]]],[[],[[8,[17,7]]]],[[],[[8,[17,7]]]],[[],57],[[],55],[[],56],[[],58],[58],[58],[[],[[11,[56]]]],[[]],[[]],[[]],[[]],0,[59,[[11,[60,61]]]],[[55,21],22],[[56,21],22],[[58,21],22],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[9,[[9,[5]]]],[9,[[9,[5]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[[55,4],[[13,[4]]]],0,0,[[[63,[[62,[56]]]],[65,[[64,[56]]]],[66,[58]]]],[[55,[4,[56]]]],[[55,[4,[3]]]],[56,11],[[55,4],[[13,[4]]]],0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],53],[[],54],[[],13],[[],13],[[],13],[[],13],[[[63,[[62,[56]]]],[65,[[64,[56]]]],[66,[58]]]],[[[66,[58]],[66,[[64,[24]]]]]],[[[63,[[62,[3]]]],[66,[58]]]]],"p":[[3,"PathBuf"],[8,"Into"],[3,"Shader"],[3,"Handle"],[8,"Any"],[3,"RenderAssets"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Result"],[3,"TypeId"],[4,"Option"],[3,"EntryPointExportPlugin"],[3,"App"],[3,"Export"],[8,"TypeData"],[3,"EntryPointExport"],[6,"ExportHandle"],[3,"NonSendMut"],[3,"Formatter"],[6,"Result"],[3,"World"],[3,"RustGpu"],[4,"AlphaMode"],[3,"BindGroupLayout"],[3,"RenderDevice"],[3,"FallbackImage"],[3,"PreparedBindGroup"],[4,"AsBindGroupError"],[8,"DynEq"],[3,"Vec"],[3,"String"],[3,"RustGpuPlugin"],[3,"RustGpuMaterialPlugin"],[3,"RustGpuKey"],[3,"RustGpuSettings"],[8,"Clone"],[4,"Ordering"],[8,"Default"],[15,"f32"],[15,"bool"],[8,"Hasher"],[8,"Debug"],[4,"ShaderRef"],[15,"u64"],[8,"FnOnce"],[3,"MaterialPipeline"],[3,"RenderPipelineDescriptor"],[6,"MeshVertexBufferLayout"],[3,"MaterialPipelineKey"],[4,"SpecializedMeshPipelineError"],[15,"str"],[3,"Uuid"],[3,"ShaderMetaMap"],[3,"ModuleMeta"],[3,"ShaderMetaPlugin"],[3,"ChangedShaders"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[4,"AssetEvent"],[3,"EventReader"],[3,"Assets"],[3,"Res"],[3,"ResMut"],[8,"RustGpuMaterial"],[8,"EntryPoint"],[8,"LoadRustGpuShader"],[4,"MeshVertex"],[4,"MeshFragment"],[4,"PbrFragment"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
